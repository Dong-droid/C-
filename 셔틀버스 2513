#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int N,K,S;
int ans;
vector<pair<int,int>> v[2];

bool comp(pair<int,int> a, pair<int,int> b){
    return abs(a.first-S) < abs(b.first-S);
}

int main()
{
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  cin>>N>>K>>S;
  
  for(int i =0,a,b; i < N; i++){
     cin>>a>>b;
     if(a < S) v[0].push_back({a,b});
     else v[1].push_back({a,b});
}

  sort(v[0].begin(),v[0].end(),comp);
  sort(v[1].begin(),v[1].end(),comp);
  
  for(int i = 0; i < 2; i++){
      while(v[i].size()){ 
          int remain_seats = 0;
          while(v[i].size()){
              ans += v[i].back().second / K * abs(v[i].back().first - S) * 2;
              v[i].back().second %= K;
              if(!v[i].back().second) v[i].pop_back();
              else break;
          }
          if(!v[i].size()) break;
          ans += abs(v[i].back().first - S) * 2;
          while(remain_seats < K && v[i].size()){
              remain_seats += v[i].back().second;
              if(remain_seats > K) v[i].back().second = remain_seats - K; 
              else v[i].pop_back();
          }
      }
  } 
    cout<<ans;
    return 0;
}
