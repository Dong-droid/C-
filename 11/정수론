//gcd(a+cd,d)=gcd(a,d)
#include <iostream>
using namespace std;
using ll=long long; 
ll gcd(ll x,ll y){
	if(!y) return x;
	return gcd(y,x%y);
}
int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	ll a,d,q,x,l,r;
	cin>>a>>d>>q;
	ll g=gcd(a,d);
	while(q--){
		cin>>x>>l>>r;
		if(x==1){
			ll c=r-l+1;
			ll b=(l+r-2)*d;
			cout<<c*(b+2*a)/2<<'\n';      
		}
		else {
			if(l==r) cout<<a+(l-1)*d<<'\n';
			else cout<<g<<'\n';
		}
	}
	return 0;
}
//등차수열의 합 또는 prefix sum
vector<ll> pre(1010101);
pre[1]=a;
for(ll i=2;i<1010101;i++) pre[i]=pre[i-1]+a+(i-1)*d;


#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct Guitar{
	string num;	
	int len;
	int sum;
};
bool compare(struct Guitar &a, struct Guitar &b){
	if(a.len!=b.len) return a.len<b.len;
	if(a.sum!=-1&&b.sum!=-1) return a.sum<b.sum;
	return a.num>b.num;
}
vector<Guitar> v;
int main() {
	int N;
	cin>>N;
	for(int i=0;i<N;i++){
		string s;
		int temp=-1;
		cin>>s;
		for(int i=0;i<s.length();i++){
			if(s[i]>=0&&s[i]<=9) temp+=s[i];
		}
		v.push_back({s,s.length(),temp});
	}
	sort(v.begin(),v.end(),compare);
	for (auto i : v){
		cout<<i.num<<'\n';
	}
	return 0;
}
#include <iostream>
using namespace std;
using ll=long long;
ll gcd(ll x,ll y){
	if(!y) return x;
	return gcd(y,x%y);
}
ll ex_gcd(ll a,ll b,ll &x,ll &y){
	if(!b){
		x=1;y=0;//초기화
		return a;
	}
	ll ret=ex_gcd(b,a%b,x,y);
	ll temp=y;
	y=x-(a/b)*y;
	x=temp;
	if(x<=0){
		x+=b;
		y-=a;
	}
	return ret;
}
int main() {
	ll N,A,x=0,y=0;
	cin>>N>>A;
	cout<<N-A<<" ";
	if(gcd(A,N)!=1) cout<<-1; //서로소인지 확인
	else{ 
	ex_gcd(A,N,x,y);
	cout<<x;
	}
	return 0;
}
/*******************
BOJ 이항계수 3

n!/ k!(n-k)! % 100...7 (소수)
-> k!(n-k)!의 모듈로 역원은 (k!(n-k)!)^(100...7-2)
********************/
#include <iostream>
using namespace std;
using ll=long long;
ll f[4000001];
ll M = 1000000007; // M이 소수임
//분할 정복을 이용해서 a^(M-2)를 구해주기
ll sol(ll a, ll p){
    if(p == 1) return a;
    ll b = sol(a,p/2);
    if(p % 2 == 0) {
        return (b * b) % M;
    }
    else{
        return ((b * b) %M * a) % M;
    }
}
int main() {
	ll N,K,x=0,y=0;
	cin>>N>>K;
    f[0] = f[1] = 1; 
    for(int i = 2; i <=N; i++) f[i] = (i * f[i-1]) % M;
    cout<<f[N] * sol((f[K] * f[N-K]) % M,M-2) % M; 
	return 0;
}
